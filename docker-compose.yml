version: '3.8'

services:
    dev:
        container_name: nestjs_api_dev
        image: nestjs-api-dev:1.0.0
        build:
            context: .
            target: development
            dockerfile: ./Dockerfile
        command: npm run start:debug
        ports:
            - 3000:3000
            - 9229:9229
        networks:
            - nesjs-network
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
    prod:
        container_name: nestjs_api_prod
        image: nestjs-api-prod:1.0.0
        build:
            context: .
            target: production
            dockerfile: ./Dockerfile
        command: npm run start:prod
        ports:
            - 3000:3000
            - 9229:9229
        networks:
            - nesjs-network
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped

networks:
    nesjs-network:
























# version: '3.8'

# services:
#   # nginx:
#   #   image: nginx:latest
#   #   ports:
#   #     - "8000:80"
#   #   volumes:
#   #     - ./nginx.conf:/etc/nginx/nginx.conf
#   #   depends_on:
#   #     - nestjs_app

#   nestjs_app:
#     build:
#       context: .
#       dockerfile: Dockerfile  # Path to your NestJS Dockerfile
#     ports:
#       - "8888:8888"
#     environment:
#       - NODE_ENV=production
#     depends_on:
#       - mongodb  # Assuming you have a MongoDB service defined

#   mongodb:
#     image: mongo:latest
#     ports:
#       - "27017:27017"


      
